{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Demo\\\\Frontend\\\\GroupManagementFrontEnd\\\\src\\\\pages\\\\auth\\\\SignUp.js\";\n\nimport React, { useState } from \"react\";\nimport { Button, Card, CardBody, FormGroup, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport UserApi from \"../../api/UserApi\";\nimport { withRouter } from \"react-router-dom\";\n\nvar SignUp = function SignUp(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisableResendButton = _useState6[0],\n      setDisableResendButton = _useState6[1];\n\n  var resendEmailToActiveAccount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDisableResendButton(true);\n              _context.next = 3;\n              return UserApi.resendEmailToActiveAccount(email);\n\n            case 3:\n              setDisableResendButton(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resendEmailToActiveAccount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectToLogin = function redirectToLogin() {\n    props.history.push(\"/auth/sign-in\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Get started\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Start creating account to experience in VTI Academy.\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object({\n      firstname: Yup.string().max(50, 'Must be less than 50 characters').required('Required'),\n      lastname: Yup.string().max(50, 'Must be less than 50 characters').required('Required'),\n      username: Yup.string().min(6, 'Must be between 6 and 50 characters').max(50, 'Must be between 6 and 50 characters').required('Required').test('checkExistsUsername', 'This username is already registered.', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return UserApi.existsByUsername(username);\n\n                case 2:\n                  isExists = _context2.sent;\n                  return _context2.abrupt(\"return\", !isExists);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()),\n      email: Yup.string().email('Invalid email address').required('Required').test('checkExistsEmail', 'This email is already registered.', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return UserApi.existsByEmail(email);\n\n                case 2:\n                  isExists = _context3.sent;\n                  return _context3.abrupt(\"return\", !isExists);\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }()),\n      password: Yup.string().min(6, 'Must be between 6 and 50 characters').max(50, 'Must be between 6 and 50 characters').required('Required'),\n      confirmPassword: Yup.string().required('Required').when(\"password\", {\n        is: function is(value) {\n          return value && value.length > 0 ? true : false;\n        },\n        then: Yup.string().oneOf([Yup.ref(\"password\")], \"Confirm Password do not match\")\n      })\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(values) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return UserApi.create(values.firstname, values.lastname, values.username, values.email, values.password);\n\n              case 3:\n                // message\n                setEmail(values.email);\n                setOpenModal(true);\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                // redirect page error server\n                props.history.push(\"/auth/500\");\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    validateOnChange: false,\n    validateOnBlur: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, function (_ref5) {\n    var isSubmitting = _ref5.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"First Name\",\n      type: \"text\",\n      bsSize: \"lg\",\n      name: \"firstname\",\n      placeholder: \"Enter your first name\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Last Name\",\n      type: \"text\",\n      bsSize: \"lg\",\n      name: \"lastname\",\n      placeholder: \"Enter your last name\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Username\",\n      type: \"text\",\n      bsSize: \"lg\",\n      name: \"username\",\n      placeholder: \"Enter your username\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Email\",\n      type: \"email\",\n      bsSize: \"lg\",\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Password\",\n      type: \"password\",\n      bsSize: \"lg\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Confirm Password\",\n      type: \"password\",\n      bsSize: \"lg\",\n      name: \"confirmPassword\",\n      placeholder: \"Enter confirm password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \"Sign up\"))))));\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"You need to confirm your account\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, \"We have sent an email to \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 38\n    }\n  }, email), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Please check your email to active account\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: resendEmailToActiveAccount,\n    disabled: isDisableResendButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Resend\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: redirectToLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["D:/Demo/Frontend/GroupManagementFrontEnd/src/pages/auth/SignUp.js"],"names":["React","useState","Button","Card","CardBody","FormGroup","Modal","ModalBody","ModalFooter","ModalHeader","FastField","Form","Formik","ReactstrapInput","Yup","UserApi","withRouter","SignUp","props","isOpenModal","setOpenModal","email","setEmail","isDisableResendButton","setDisableResendButton","resendEmailToActiveAccount","redirectToLogin","history","push","firstname","lastname","username","password","confirmPassword","object","string","max","required","min","test","existsByUsername","isExists","existsByEmail","when","is","value","length","then","oneOf","ref","values","create","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { FastField, Form, Formik } from \"formik\";\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport * as Yup from 'yup';\r\nimport UserApi from \"../../api/UserApi\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SignUp = (props) => {\r\n\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [isDisableResendButton, setDisableResendButton] = useState(false);\r\n\r\n  const resendEmailToActiveAccount = async () => {\r\n    setDisableResendButton(true);\r\n    await UserApi.resendEmailToActiveAccount(email);\r\n    setDisableResendButton(false);\r\n  }\r\n\r\n  const redirectToLogin = () => {\r\n    props.history.push(\"/auth/sign-in\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center mt-4\">\r\n        <h1 className=\"h2\">Get started</h1>\r\n        <p className=\"lead\">\r\n          Start creating account to experience in VTI Academy.\r\n      </p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={\r\n          {\r\n            firstname: '',\r\n            lastname: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n          }\r\n        }\r\n        validationSchema={\r\n          Yup.object({\r\n            firstname: Yup.string()\r\n              .max(50, 'Must be less than 50 characters')\r\n              .required('Required'),\r\n\r\n            lastname: Yup.string()\r\n              .max(50, 'Must be less than 50 characters')\r\n              .required('Required'),\r\n\r\n            username: Yup.string()\r\n              .min(6, 'Must be between 6 and 50 characters')\r\n              .max(50, 'Must be between 6 and 50 characters')\r\n              .required('Required')\r\n              .test('checkExistsUsername', 'This username is already registered.', async username => {\r\n                // call api\r\n                const isExists = await UserApi.existsByUsername(username);\r\n                return !isExists;\r\n              }),\r\n\r\n            email: Yup.string()\r\n              .email('Invalid email address')\r\n              .required('Required')\r\n              .test('checkExistsEmail', 'This email is already registered.', async email => {\r\n                // call api\r\n                const isExists = await UserApi.existsByEmail(email);\r\n                return !isExists;\r\n              }),\r\n\r\n            password: Yup.string()\r\n              .min(6, 'Must be between 6 and 50 characters')\r\n              .max(50, 'Must be between 6 and 50 characters')\r\n              .required('Required'),\r\n\r\n            confirmPassword: Yup.string()\r\n              .required('Required')\r\n              .when(\"password\", {\r\n                is: value => (value && value.length > 0 ? true : false),\r\n                then: Yup.string().oneOf(\r\n                  [Yup.ref(\"password\")],\r\n                  \"Confirm Password do not match\"\r\n                )\r\n              })\r\n          })\r\n        }\r\n\r\n        onSubmit={\r\n          async (values) => {\r\n            try {\r\n              // call api\r\n              await UserApi.create(\r\n                values.firstname,\r\n                values.lastname,\r\n                values.username,\r\n                values.email,\r\n                values.password\r\n              );\r\n\r\n              // message\r\n              setEmail(values.email);\r\n              setOpenModal(true);\r\n\r\n            } catch (error) {\r\n              // redirect page error server\r\n              props.history.push(\"/auth/500\");\r\n            }\r\n          }\r\n        }\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <Form>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"First Name\"\r\n                      type=\"text\"\r\n                      bsSize=\"lg\"\r\n                      name=\"firstname\"\r\n                      placeholder=\"Enter your first name\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Last Name\"\r\n                      type=\"text\"\r\n                      bsSize=\"lg\"\r\n                      name=\"lastname\"\r\n                      placeholder=\"Enter your last name\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      bsSize=\"lg\"\r\n                      name=\"username\"\r\n                      placeholder=\"Enter your username\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      bsSize=\"lg\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter your email\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      bsSize=\"lg\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      bsSize=\"lg\"\r\n                      name=\"confirmPassword\"\r\n                      placeholder=\"Enter confirm password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button type='submit' color=\"primary\" size=\"lg\" disabled={isSubmitting}>\r\n                      Sign up\r\n                </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n\r\n      <Modal isOpen={isOpenModal}>\r\n\r\n        {/* header */}\r\n        <ModalHeader>You need to confirm your account</ModalHeader>\r\n\r\n        {/* body */}\r\n        <ModalBody className=\"m-3\">\r\n          <p className=\"mb-0\">\r\n            We have sent an email to <b>{email}</b>.\r\n        </p>\r\n          <p className=\"mb-0\">\r\n            Please check your email to active account\r\n        </p>\r\n        </ModalBody>\r\n\r\n        {/* footer */}\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={resendEmailToActiveAccount} disabled={isDisableResendButton}>\r\n            Resend\r\n          </Button>{\" \"}\r\n\r\n          <Button color=\"primary\" onClick={redirectToLogin}>\r\n            Login\r\n          </Button>\r\n\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}