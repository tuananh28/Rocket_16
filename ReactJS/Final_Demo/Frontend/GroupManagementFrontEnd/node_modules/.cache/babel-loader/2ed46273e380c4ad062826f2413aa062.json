{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\n/** Selector **/\n\nvar groupSelector = function groupSelector(state) {\n  return state.Group;\n};\n\nvar selectGroupSelector = createSelector(groupSelector, function (state) {\n  return state.groups;\n});\nvar selectPageSelector = createSelector(groupSelector, function (state) {\n  return state.page;\n});\nvar selectSizeSelector = createSelector(groupSelector, function (state) {\n  return state.size;\n});\nvar selectTotalSizeSelector = createSelector(groupSelector, function (state) {\n  return state.totalSize;\n});\nvar selectMinTotalMemberSelector = createSelector(groupSelector, function (state) {\n  return state.minTotalMember;\n});\nvar selectMaxTotalMemberSelector = createSelector(groupSelector, function (state) {\n  return state.maxTotalMember;\n});\nvar selectSearchSelector = createSelector(groupSelector, function (state) {\n  return state.search;\n});\nvar selectSelectedRowsSelector = createSelector(groupSelector, function (state) {\n  return state.selectedRows;\n});\n/** function */\n\nexport var selectGroups = function selectGroups(state) {\n  return selectGroupSelector(state);\n};\nexport var selectPage = function selectPage(state) {\n  return selectPageSelector(state);\n};\nexport var selectSize = function selectSize(state) {\n  return selectSizeSelector(state);\n};\nexport var selectTotalSize = function selectTotalSize(state) {\n  return selectTotalSizeSelector(state);\n};\nexport var selectMinTotalMember = function selectMinTotalMember(state) {\n  return selectMinTotalMemberSelector(state);\n};\nexport var selectMaxTotalMember = function selectMaxTotalMember(state) {\n  return selectMaxTotalMemberSelector(state);\n};\nexport var selectSearch = function selectSearch(state) {\n  return selectSearchSelector(state);\n};\nexport var selectSelectedRows = function selectSelectedRows(state) {\n  return selectSelectedRowsSelector(state);\n};","map":{"version":3,"sources":["D:/Rocket_16/ReactJS/Final_Demo/Frontend/GroupManagementFrontEnd/src/redux/selectors/GroupSelector.js"],"names":["createSelector","groupSelector","state","Group","selectGroupSelector","groups","selectPageSelector","page","selectSizeSelector","size","selectTotalSizeSelector","totalSize","selectMinTotalMemberSelector","minTotalMember","selectMaxTotalMemberSelector","maxTotalMember","selectSearchSelector","search","selectSelectedRowsSelector","selectedRows","selectGroups","selectPage","selectSize","selectTotalSize","selectMinTotalMember","selectMaxTotalMember","selectSearch","selectSelectedRows"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAjB;AAAA,CAAtB;;AAEA,IAAMC,mBAAmB,GAAGJ,cAAc,CACtCC,aADsC,EAEtC,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACG,MAAV;AAAA,CAFiC,CAA1C;AAIA,IAAMC,kBAAkB,GAAGN,cAAc,CACrCC,aADqC,EAErC,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACK,IAAV;AAAA,CAFgC,CAAzC;AAIA,IAAMC,kBAAkB,GAAGR,cAAc,CACrCC,aADqC,EAErC,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACO,IAAV;AAAA,CAFgC,CAAzC;AAIA,IAAMC,uBAAuB,GAAGV,cAAc,CAC1CC,aAD0C,EAE1C,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACS,SAAV;AAAA,CAFqC,CAA9C;AAIA,IAAMC,4BAA4B,GAAGZ,cAAc,CAC/CC,aAD+C,EAE/C,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACW,cAAV;AAAA,CAF0C,CAAnD;AAIA,IAAMC,4BAA4B,GAAGd,cAAc,CAC/CC,aAD+C,EAE/C,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACa,cAAV;AAAA,CAF0C,CAAnD;AAIA,IAAMC,oBAAoB,GAAGhB,cAAc,CACvCC,aADuC,EAEvC,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACe,MAAV;AAAA,CAFkC,CAA3C;AAIA,IAAMC,0BAA0B,GAAGlB,cAAc,CAC7CC,aAD6C,EAE7C,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACiB,YAAV;AAAA,CAFwC,CAAjD;AAIA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAClB,KAAD,EAAW;AACnC,SAAOE,mBAAmB,CAACF,KAAD,CAA1B;AACH,CAFM;AAIP,OAAO,IAAMmB,UAAU,GAAG,SAAbA,UAAa,CAACnB,KAAD,EAAW;AACjC,SAAOI,kBAAkB,CAACJ,KAAD,CAAzB;AACH,CAFM;AAIP,OAAO,IAAMoB,UAAU,GAAG,SAAbA,UAAa,CAACpB,KAAD,EAAW;AACjC,SAAOM,kBAAkB,CAACN,KAAD,CAAzB;AACH,CAFM;AAIP,OAAO,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,KAAD,EAAW;AACtC,SAAOQ,uBAAuB,CAACR,KAAD,CAA9B;AACH,CAFM;AAIP,OAAO,IAAMsB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACtB,KAAD,EAAW;AAC3C,SAAOU,4BAA4B,CAACV,KAAD,CAAnC;AACH,CAFM;AAIP,OAAO,IAAMuB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACvB,KAAD,EAAW;AAC3C,SAAOY,4BAA4B,CAACZ,KAAD,CAAnC;AACH,CAFM;AAIP,OAAO,IAAMwB,YAAY,GAAG,SAAfA,YAAe,CAACxB,KAAD,EAAW;AACnC,SAAOc,oBAAoB,CAACd,KAAD,CAA3B;AACH,CAFM;AAIP,OAAO,IAAMyB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACzB,KAAD,EAAW;AACzC,SAAOgB,0BAA0B,CAAChB,KAAD,CAAjC;AACH,CAFM","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n/** Selector **/\r\nconst groupSelector = (state) => state.Group;\r\n\r\nconst selectGroupSelector = createSelector(\r\n    groupSelector,\r\n    state => state.groups);\r\n\r\nconst selectPageSelector = createSelector(\r\n    groupSelector,\r\n    state => state.page);\r\n\r\nconst selectSizeSelector = createSelector(\r\n    groupSelector,\r\n    state => state.size);\r\n\r\nconst selectTotalSizeSelector = createSelector(\r\n    groupSelector,\r\n    state => state.totalSize);\r\n\r\nconst selectMinTotalMemberSelector = createSelector(\r\n    groupSelector,\r\n    state => state.minTotalMember);\r\n\r\nconst selectMaxTotalMemberSelector = createSelector(\r\n    groupSelector,\r\n    state => state.maxTotalMember);\r\n\r\nconst selectSearchSelector = createSelector(\r\n    groupSelector,\r\n    state => state.search);\r\n\r\nconst selectSelectedRowsSelector = createSelector(\r\n    groupSelector,\r\n    state => state.selectedRows);\r\n\r\n/** function */\r\nexport const selectGroups = (state) => {\r\n    return selectGroupSelector(state);\r\n}\r\n\r\nexport const selectPage = (state) => {\r\n    return selectPageSelector(state);\r\n}\r\n\r\nexport const selectSize = (state) => {\r\n    return selectSizeSelector(state);\r\n}\r\n\r\nexport const selectTotalSize = (state) => {\r\n    return selectTotalSizeSelector(state);\r\n}\r\n\r\nexport const selectMinTotalMember = (state) => {\r\n    return selectMinTotalMemberSelector(state);\r\n}\r\n\r\nexport const selectMaxTotalMember = (state) => {\r\n    return selectMaxTotalMemberSelector(state);\r\n}\r\n\r\nexport const selectSearch = (state) => {\r\n    return selectSearchSelector(state);\r\n}\r\n\r\nexport const selectSelectedRows = (state) => {\r\n    return selectSelectedRowsSelector(state);\r\n}"]},"metadata":{},"sourceType":"module"}