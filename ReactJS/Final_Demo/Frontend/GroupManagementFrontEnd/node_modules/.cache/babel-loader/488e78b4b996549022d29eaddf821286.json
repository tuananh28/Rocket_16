{"ast":null,"code":"import Api from './Api';\nvar url = \"/groups\";\n\nvar getAll = function getAll() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var sortField = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';\n  var sortType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'desc';\n  var search = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var minTotalMember = arguments.length > 5 ? arguments[5] : undefined;\n  var maxTotalMember = arguments.length > 6 ? arguments[6] : undefined;\n  var parameters = {\n    page: page,\n    size: size,\n    sort: \"\".concat(sortField, \",\").concat(sortType)\n  }; // search\n\n  if (search) {\n    parameters.search = search;\n  } // filter\n\n\n  if (minTotalMember !== null && minTotalMember !== undefined) {\n    parameters.minTotalMember = minTotalMember;\n  }\n\n  if (maxTotalMember !== null && maxTotalMember !== undefined) {\n    parameters.maxTotalMember = maxTotalMember;\n  }\n\n  return Api.get(\"\".concat(url), {\n    params: parameters\n  });\n};\n\nvar existsByName = function existsByName(name) {\n  return Api.get(\"\".concat(url, \"/name/\").concat(name));\n};\n\nvar create = function create(name) {\n  var body = {\n    name: name\n  };\n  return Api.post(url, body);\n};\n\nvar getById = function getById(id) {\n  return Api.get(\"\".concat(url, \"/\").concat(id));\n};\n\nvar update = function update(id, name, totalMember) {\n  var body = {\n    name: name,\n    totalMember: totalMember\n  };\n  return Api.put(\"\".concat(url, \"/\").concat(id), body);\n};\n\nvar deleteByIds = function deleteByIds(ids) {\n  return Api.delete(\"\".concat(url, \"/\").concat(ids.toString()));\n}; // export\n\n\nvar api = {\n  getAll: getAll,\n  existsByName: existsByName,\n  create: create,\n  getById: getById,\n  update: update,\n  deleteByIds: deleteByIds\n};\nexport default api;","map":{"version":3,"sources":["D:/Rocket_16/ReactJS/Final_Demo/Frontend/GroupManagementFrontEnd/src/api/GroupApi.js"],"names":["Api","url","getAll","page","size","sortField","sortType","search","minTotalMember","maxTotalMember","parameters","sort","undefined","get","params","existsByName","name","create","body","post","getById","id","update","totalMember","put","deleteByIds","ids","delete","toString","api"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,IAAMC,GAAG,GAAG,SAAZ;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAA2G;AAAA,MAA1GC,IAA0G,uEAAnG,CAAmG;AAAA,MAAhGC,IAAgG,uEAAzF,EAAyF;AAAA,MAArFC,SAAqF,uEAAzE,IAAyE;AAAA,MAAnEC,QAAmE,uEAAxD,MAAwD;AAAA,MAAhDC,MAAgD,uEAAvC,EAAuC;AAAA,MAAnCC,cAAmC;AAAA,MAAnBC,cAAmB;AAEtH,MAAMC,UAAU,GAAG;AACfP,IAAAA,IAAI,EAAJA,IADe;AAEfC,IAAAA,IAAI,EAAJA,IAFe;AAGfO,IAAAA,IAAI,YAAKN,SAAL,cAAkBC,QAAlB;AAHW,GAAnB,CAFsH,CAQtH;;AACA,MAAIC,MAAJ,EAAY;AACRG,IAAAA,UAAU,CAACH,MAAX,GAAoBA,MAApB;AACH,GAXqH,CAatH;;;AACA,MAAIC,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAKI,SAAlD,EAA6D;AACzDF,IAAAA,UAAU,CAACF,cAAX,GAA4BA,cAA5B;AACH;;AAED,MAAIC,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAKG,SAAlD,EAA6D;AACzDF,IAAAA,UAAU,CAACD,cAAX,GAA4BA,cAA5B;AACH;;AAED,SAAOT,GAAG,CAACa,GAAJ,WAAWZ,GAAX,GAAkB;AAAEa,IAAAA,MAAM,EAAEJ;AAAV,GAAlB,CAAP;AACH,CAvBD;;AAyBA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3B,SAAOhB,GAAG,CAACa,GAAJ,WAAWZ,GAAX,mBAAuBe,IAAvB,EAAP;AACH,CAFD;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACD,IAAD,EAAU;AAErB,MAAME,IAAI,GAAG;AACTF,IAAAA,IAAI,EAAJA;AADS,GAAb;AAIA,SAAOhB,GAAG,CAACmB,IAAJ,CAASlB,GAAT,EAAciB,IAAd,CAAP;AACH,CAPD;;AASA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AACpB,SAAOrB,GAAG,CAACa,GAAJ,WAAWZ,GAAX,cAAkBoB,EAAlB,EAAP;AACH,CAFD;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACD,EAAD,EAAKL,IAAL,EAAWO,WAAX,EAA2B;AAEtC,MAAML,IAAI,GAAG;AACTF,IAAAA,IAAI,EAAJA,IADS;AAETO,IAAAA,WAAW,EAAXA;AAFS,GAAb;AAKA,SAAOvB,GAAG,CAACwB,GAAJ,WAAWvB,GAAX,cAAkBoB,EAAlB,GAAwBH,IAAxB,CAAP;AACH,CARD;;AAUA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;AACzB,SAAO1B,GAAG,CAAC2B,MAAJ,WAAc1B,GAAd,cAAqByB,GAAG,CAACE,QAAJ,EAArB,EAAP;AACH,CAFD,C,CAIA;;;AACA,IAAMC,GAAG,GAAG;AAAE3B,EAAAA,MAAM,EAANA,MAAF;AAAUa,EAAAA,YAAY,EAAZA,YAAV;AAAwBE,EAAAA,MAAM,EAANA,MAAxB;AAAgCG,EAAAA,OAAO,EAAPA,OAAhC;AAAyCE,EAAAA,MAAM,EAANA,MAAzC;AAAiDG,EAAAA,WAAW,EAAXA;AAAjD,CAAZ;AACA,eAAeI,GAAf","sourcesContent":["import Api from './Api';\r\n\r\nconst url = \"/groups\";\r\n\r\nconst getAll = (page = 1, size = 10, sortField = 'id', sortType = 'desc', search = '', minTotalMember, maxTotalMember) => {\r\n\r\n    const parameters = {\r\n        page,\r\n        size,\r\n        sort: `${sortField},${sortType}`\r\n    }\r\n\r\n    // search\r\n    if (search) {\r\n        parameters.search = search;\r\n    }\r\n\r\n    // filter\r\n    if (minTotalMember !== null && minTotalMember !== undefined) {\r\n        parameters.minTotalMember = minTotalMember;\r\n    }\r\n\r\n    if (maxTotalMember !== null && maxTotalMember !== undefined) {\r\n        parameters.maxTotalMember = maxTotalMember;\r\n    }\r\n\r\n    return Api.get(`${url}`, { params: parameters });\r\n};\r\n\r\nconst existsByName = (name) => {\r\n    return Api.get(`${url}/name/${name}`);\r\n};\r\n\r\nconst create = (name) => {\r\n\r\n    const body = {\r\n        name\r\n    }\r\n\r\n    return Api.post(url, body);\r\n};\r\n\r\nconst getById = (id) => {\r\n    return Api.get(`${url}/${id}`);\r\n};\r\n\r\nconst update = (id, name, totalMember) => {\r\n\r\n    const body = {\r\n        name,\r\n        totalMember\r\n    }\r\n\r\n    return Api.put(`${url}/${id}`, body);\r\n};\r\n\r\nconst deleteByIds = (ids) => {\r\n    return Api.delete(`${url}/${ids.toString()}`);\r\n};\r\n\r\n// export\r\nconst api = { getAll, existsByName, create, getById, update, deleteByIds }\r\nexport default api;"]},"metadata":{},"sourceType":"module"}