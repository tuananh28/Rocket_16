{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Rocket_16\\\\ReactJS\\\\Final_Demo\\\\Frontend\\\\Group_Management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Rocket_16\\\\ReactJS\\\\Final_Demo\\\\Frontend\\\\Group_Management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Rocket_16\\\\ReactJS\\\\Final_Demo\\\\Frontend\\\\Group_Management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Rocket_16\\\\ReactJS\\\\Final_Demo\\\\Frontend\\\\Group_Management\\\\src\\\\pages\\\\auth\\\\SignIn.js\";\n\nimport React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Card, CardBody, FormGroup, CustomInput, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport LoginApi from \"../../api/LoginApi\";\nimport avatar from \"../../assets/img/avatars/avatar.jpg\";\nimport storage from \"../../Storage/Storage\";\nimport { toastr } from \"react-redux-toastr\";\nimport UserApi from \"../../api/UserApi\";\nimport { setUserLoginInfo, setTokenInfo } from \"../../redux/actions/UserLoginInfoActions\";\nimport { connect } from 'react-redux';\n\nvar showErrorNotification = function showErrorNotification(title, message) {\n  var options = {\n    timeOut: 3000,\n    showCloseButton: false,\n    progressBar: false,\n    position: \"top-right\"\n  }; // show notification\n\n  toastr.error(title, message, options);\n};\n\nvar SignIn = function SignIn(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisableResendButton = _useState6[0],\n      setDisableResendButton = _useState6[1];\n\n  var resendEmailToActiveAccount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDisableResendButton(true);\n              _context.next = 3;\n              return UserApi.resendEmailToActiveAccount(email);\n\n            case 3:\n              setDisableResendButton(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resendEmailToActiveAccount() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // rememberMe\n\n\n  var _React$useState = React.useState(storage.isRememberMe()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedRememberMe = _React$useState2[0],\n      setCheckedRememberMe = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Welcome to VTI Academy\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account to continue\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().min(6, 'Must be between 6 and 50 characters').max(50, 'Must be between 6 and 50 characters').required('Required'),\n      password: Yup.string().min(6, 'Must be between 6 and 50 characters').max(50, 'Must be between 6 and 50 characters').required('Required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return LoginApi.login(values.username, values.password);\n\n              case 3:\n                result = _context2.sent;\n\n                // check user active\n                if (result.token === null || result.token === undefined) {\n                  setEmail(result.email);\n                  setOpenModal(true);\n                } else {\n                  // set remember me\n                  storage.setRememberMe(checkedRememberMe); // save token & UserInfo to storage\n\n                  storage.setToken(result.token);\n                  storage.setUserInfo(result.userName, result.email, result.firstName, result.lastName, result.role, result.status); // save token & UserInfo to redux\n\n                  props.setTokenInfo(result.token);\n                  props.setUserLoginInfo(result.userName, result.email, result.firstName, result.lastName, result.role, result.status); // redirect to home page\n\n                  props.history.push(\"/dashboard/default\");\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                if (_context2.t0.status === 401) {\n                  // show error notification\n                  showErrorNotification(\"Login Fail!\", \"Wrong Username or Password!\");\n                } else {\n                  // redirect page error server\n                  props.history.push(\"/auth/500\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }() // validateOnChange={false}\n    // validateOnBlur={false}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"Chris Wood\",\n      className: \"img-fluid rounded-circle\",\n      width: \"132\",\n      height: \"132\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Username\",\n      type: \"text\",\n      bsSize: \"lg\",\n      name: \"username\",\n      placeholder: \"Enter your username\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Password\",\n      type: \"password\",\n      bsSize: \"lg\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/reset-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }\n    }, \"Forgot password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"checkbox\",\n      id: \"rememberMe\",\n      label: \"Remember me next time\",\n      defaultChecked: checkedRememberMe,\n      onChange: function onChange() {\n        return setCheckedRememberMe(!checkedRememberMe);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, \"Sign in\"))))));\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, \"You need to active your account\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Your account is not active.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"Please check your email (\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 38\n    }\n  }, email), \") to active account.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: resendEmailToActiveAccount,\n    disabled: isDisableResendButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Resend\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return setOpenModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default withRouter(connect(null, {\n  setUserLoginInfo: setUserLoginInfo,\n  setTokenInfo: setTokenInfo\n})(SignIn));","map":{"version":3,"sources":["D:/Rocket_16/ReactJS/Final_Demo/Frontend/Group_Management/src/pages/auth/SignIn.js"],"names":["React","useState","Link","withRouter","Button","Card","CardBody","FormGroup","CustomInput","Modal","ModalBody","ModalFooter","ModalHeader","FastField","Form","Formik","ReactstrapInput","Yup","LoginApi","avatar","storage","toastr","UserApi","setUserLoginInfo","setTokenInfo","connect","showErrorNotification","title","message","options","timeOut","showCloseButton","progressBar","position","error","SignIn","props","isOpenModal","setOpenModal","email","setEmail","isDisableResendButton","setDisableResendButton","resendEmailToActiveAccount","isRememberMe","checkedRememberMe","setCheckedRememberMe","username","password","object","string","min","max","required","values","login","result","token","undefined","setRememberMe","setToken","setUserInfo","userName","firstName","lastName","role","status","history","push","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  CustomInput,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nimport { FastField, Form, Formik } from \"formik\";\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport * as Yup from 'yup';\r\nimport LoginApi from \"../../api/LoginApi\";\r\n\r\nimport avatar from \"../../assets/img/avatars/avatar.jpg\";\r\nimport storage from \"../../Storage/Storage\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport UserApi from \"../../api/UserApi\";\r\n\r\nimport { setUserLoginInfo, setTokenInfo } from \"../../redux/actions/UserLoginInfoActions\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst showErrorNotification = (title, message) => {\r\n  const options = {\r\n    timeOut: 3000,\r\n    showCloseButton: false,\r\n    progressBar: false,\r\n    position: \"top-right\"\r\n  };\r\n\r\n  // show notification\r\n  toastr.error(title, message, options);\r\n}\r\n\r\nconst SignIn = (props) => {\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [isDisableResendButton, setDisableResendButton] = useState(false);\r\n\r\n  const resendEmailToActiveAccount = async () => {\r\n    setDisableResendButton(true);\r\n    await UserApi.resendEmailToActiveAccount(email);\r\n    setDisableResendButton(false);\r\n  }\r\n\r\n  // rememberMe\r\n  const [checkedRememberMe, setCheckedRememberMe] = React.useState(storage.isRememberMe());\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"text-center mt-4\">\r\n        <h2>Welcome to VTI Academy</h2>\r\n        <p className=\"lead\">Sign in to your account to continue</p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={\r\n          {\r\n            username: '',\r\n            password: ''\r\n          }\r\n        }\r\n        validationSchema={\r\n          Yup.object({\r\n            username: Yup.string()\r\n              .min(6, 'Must be between 6 and 50 characters')\r\n              .max(50, 'Must be between 6 and 50 characters')\r\n              .required('Required'),\r\n\r\n            password: Yup.string()\r\n              .min(6, 'Must be between 6 and 50 characters')\r\n              .max(50, 'Must be between 6 and 50 characters')\r\n              .required('Required')\r\n          })\r\n        }\r\n\r\n        onSubmit={\r\n          async (values) => {\r\n            try {\r\n              // call api\r\n              const result = await LoginApi.login(\r\n                values.username,\r\n                values.password\r\n              );\r\n\r\n              // check user active\r\n              if (result.token === null || result.token === undefined) {\r\n                setEmail(result.email);\r\n                setOpenModal(true);\r\n\r\n              } else {\r\n                // set remember me\r\n                storage.setRememberMe(checkedRememberMe);\r\n\r\n                // save token & UserInfo to storage\r\n                storage.setToken(result.token);\r\n                storage.setUserInfo(\r\n                  result.userName,\r\n                  result.email,\r\n                  result.firstName,\r\n                  result.lastName,\r\n                  result.role,\r\n                  result.status);\r\n\r\n                // save token & UserInfo to redux\r\n                props.setTokenInfo(result.token);\r\n                props.setUserLoginInfo(\r\n                  result.userName,\r\n                  result.email,\r\n                  result.firstName,\r\n                  result.lastName,\r\n                  result.role,\r\n                  result.status)\r\n\r\n                // redirect to home page\r\n                props.history.push(\"/dashboard/default\");\r\n              }\r\n\r\n            } catch (error) {\r\n              if (error.status === 401) {\r\n                // show error notification\r\n                showErrorNotification(\"Login Fail!\", \"Wrong Username or Password!\")\r\n              } else {\r\n                // redirect page error server\r\n                props.history.push(\"/auth/500\");\r\n              }\r\n            }\r\n          }\r\n        }\r\n      // validateOnChange={false}\r\n      // validateOnBlur={false}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <div className=\"text-center\">\r\n                  <img\r\n                    src={avatar}\r\n                    alt=\"Chris Wood\"\r\n                    className=\"img-fluid rounded-circle\"\r\n                    width=\"132\"\r\n                    height=\"132\"\r\n                  />\r\n                </div>\r\n                <Form>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      bsSize=\"lg\"\r\n                      name=\"username\"\r\n                      placeholder=\"Enter your username\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      bsSize=\"lg\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                    <small>\r\n                      <Link to=\"/auth/reset-password\">Forgot password?</Link>\r\n                    </small>\r\n                  </FormGroup>\r\n\r\n                  {/* Remember me */}\r\n                  <div>\r\n                    <CustomInput\r\n                      type=\"checkbox\"\r\n                      id=\"rememberMe\"\r\n                      label=\"Remember me next time\"\r\n                      defaultChecked={checkedRememberMe}\r\n                      onChange={() => setCheckedRememberMe(!checkedRememberMe)}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* submit */}\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button type='submit' color=\"primary\" size=\"lg\" disabled={isSubmitting}>\r\n                      Sign in\r\n                  </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n\r\n      <Modal isOpen={isOpenModal}>\r\n\r\n        {/* header */}\r\n        <ModalHeader>You need to active your account</ModalHeader>\r\n\r\n        {/* body */}\r\n        <ModalBody className=\"m-3\">\r\n          <p className=\"mb-0\">\r\n            Your account is not active.\r\n          </p>\r\n          <p className=\"mb-0\">\r\n            Please check your email (<b>{email}</b>) to active account.\r\n          </p>\r\n        </ModalBody>\r\n\r\n        {/* footer */}\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={resendEmailToActiveAccount} disabled={isDisableResendButton}>\r\n            Resend\r\n          </Button>{\" \"}\r\n\r\n          <Button color=\"primary\" onClick={() => setOpenModal(false)}>\r\n            Close\r\n          </Button>\r\n\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default withRouter(connect(null, { setUserLoginInfo, setTokenInfo })(SignIn));"]},"metadata":{},"sourceType":"module"}