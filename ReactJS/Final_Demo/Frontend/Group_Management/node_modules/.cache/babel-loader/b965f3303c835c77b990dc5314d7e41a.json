{"ast":null,"code":"var setRememberMe = function setRememberMe(isRememberMe) {\n  localStorage.setItem('isRememberMe', isRememberMe);\n};\n\nvar isRememberMe = function isRememberMe() {\n  if (localStorage.getItem('isRememberMe') === null || localStorage.getItem('isRememberMe') === undefined) {\n    return true;\n  } // convert string to boolean\n\n\n  return JSON.parse(localStorage.getItem('isRememberMe'));\n};\n\nvar setItem = function setItem(key, value) {\n  if (isRememberMe()) {\n    localStorage.setItem(key, value);\n  } else {\n    sessionStorage.setItem(key, value);\n  }\n};\n\nvar getItem = function getItem(key) {\n  if (isRememberMe()) {\n    return localStorage.getItem(key);\n  } else {\n    return sessionStorage.getItem(key);\n  }\n};\n\nvar setToken = function setToken(token) {\n  setItem('token', token);\n};\n\nvar getToken = function getToken() {\n  return getItem('token');\n};\n\nvar setUserInfo = function setUserInfo(userName, email, firstName, lastName, role, status) {\n  setItem('userName', userName);\n  setItem('email', email);\n  setItem('firstName', firstName);\n  setItem('lastName', lastName);\n  setItem('role', role);\n  setItem('status', status);\n};\n\nvar getUserInfo = function getUserInfo() {\n  return {\n    'userName': getItem('userName'),\n    'email': getItem('email'),\n    'firstName': getItem('firstName'),\n    'lastName': getItem('lastName'),\n    'role': getItem('role'),\n    'status': getItem('status')\n  };\n}; // export\n\n\nvar storage = {\n  isRememberMe: isRememberMe,\n  setRememberMe: setRememberMe,\n  setToken: setToken,\n  getToken: getToken,\n  setUserInfo: setUserInfo,\n  getUserInfo: getUserInfo\n};\nexport default storage;","map":{"version":3,"sources":["D:/Rocket_16/ReactJS/Final_Demo/Frontend/GroupManagementFrontEnd/src/Storage/Storage.js"],"names":["setRememberMe","isRememberMe","localStorage","setItem","getItem","undefined","JSON","parse","key","value","sessionStorage","setToken","token","getToken","setUserInfo","userName","email","firstName","lastName","role","status","getUserInfo","storage"],"mappings":"AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,YAAD,EAAkB;AACpCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,YAArC;AACH,CAFD;;AAIA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,MAAIC,YAAY,CAACE,OAAb,CAAqB,cAArB,MAAyC,IAAzC,IAAiDF,YAAY,CAACE,OAAb,CAAqB,cAArB,MAAyCC,SAA9F,EAAyG;AACrG,WAAO,IAAP;AACH,GAJsB,CAMvB;;;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACE,OAAb,CAAqB,cAArB,CAAX,CAAP;AACH,CARD;;AAUA,IAAMD,OAAO,GAAG,SAAVA,OAAU,CAACK,GAAD,EAAMC,KAAN,EAAgB;AAC5B,MAAIR,YAAY,EAAhB,EAAoB;AAChBC,IAAAA,YAAY,CAACC,OAAb,CAAqBK,GAArB,EAA0BC,KAA1B;AACH,GAFD,MAEO;AACHC,IAAAA,cAAc,CAACP,OAAf,CAAuBK,GAAvB,EAA4BC,KAA5B;AACH;AACJ,CAND;;AAQA,IAAML,OAAO,GAAG,SAAVA,OAAU,CAACI,GAAD,EAAS;AACrB,MAAIP,YAAY,EAAhB,EAAoB;AAChB,WAAOC,YAAY,CAACE,OAAb,CAAqBI,GAArB,CAAP;AACH,GAFD,MAEO;AACH,WAAOE,cAAc,CAACN,OAAf,CAAuBI,GAAvB,CAAP;AACH;AACJ,CAND;;AAQA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxBT,EAAAA,OAAO,CAAC,OAAD,EAAUS,KAAV,CAAP;AACH,CAFD;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,SAAOT,OAAO,CAAC,OAAD,CAAd;AACH,CAFD;;AAIA,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,KAAX,EAAkBC,SAAlB,EAA6BC,QAA7B,EAAuCC,IAAvC,EAA6CC,MAA7C,EAAwD;AACxEjB,EAAAA,OAAO,CAAC,UAAD,EAAaY,QAAb,CAAP;AACAZ,EAAAA,OAAO,CAAC,OAAD,EAAUa,KAAV,CAAP;AACAb,EAAAA,OAAO,CAAC,WAAD,EAAcc,SAAd,CAAP;AACAd,EAAAA,OAAO,CAAC,UAAD,EAAae,QAAb,CAAP;AACAf,EAAAA,OAAO,CAAC,MAAD,EAASgB,IAAT,CAAP;AACAhB,EAAAA,OAAO,CAAC,QAAD,EAAWiB,MAAX,CAAP;AACH,CAPD;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,SAAO;AACH,gBAAYjB,OAAO,CAAC,UAAD,CADhB;AAEH,aAASA,OAAO,CAAC,OAAD,CAFb;AAGH,iBAAaA,OAAO,CAAC,WAAD,CAHjB;AAIH,gBAAYA,OAAO,CAAC,UAAD,CAJhB;AAKH,YAAQA,OAAO,CAAC,MAAD,CALZ;AAMH,cAAUA,OAAO,CAAC,QAAD;AANd,GAAP;AAQH,CATD,C,CAWA;;;AACA,IAAMkB,OAAO,GAAG;AAAErB,EAAAA,YAAY,EAAZA,YAAF;AAAgBD,EAAAA,aAAa,EAAbA,aAAhB;AAA+BW,EAAAA,QAAQ,EAARA,QAA/B;AAAyCE,EAAAA,QAAQ,EAARA,QAAzC;AAAmDC,EAAAA,WAAW,EAAXA,WAAnD;AAAgEO,EAAAA,WAAW,EAAXA;AAAhE,CAAhB;AACA,eAAeC,OAAf","sourcesContent":["const setRememberMe = (isRememberMe) => {\r\n    localStorage.setItem('isRememberMe', isRememberMe);\r\n};\r\n\r\nconst isRememberMe = () => {\r\n\r\n    if (localStorage.getItem('isRememberMe') === null || localStorage.getItem('isRememberMe') === undefined) {\r\n        return true;\r\n    }\r\n\r\n    // convert string to boolean\r\n    return JSON.parse(localStorage.getItem('isRememberMe'));\r\n};\r\n\r\nconst setItem = (key, value) => {\r\n    if (isRememberMe()) {\r\n        localStorage.setItem(key, value);\r\n    } else {\r\n        sessionStorage.setItem(key, value);\r\n    }\r\n}\r\n\r\nconst getItem = (key) => {\r\n    if (isRememberMe()) {\r\n        return localStorage.getItem(key);\r\n    } else {\r\n        return sessionStorage.getItem(key);\r\n    }\r\n}\r\n\r\nconst setToken = (token) => {\r\n    setItem('token', token);\r\n};\r\n\r\nconst getToken = () => {\r\n    return getItem('token');\r\n};\r\n\r\nconst setUserInfo = (userName, email, firstName, lastName, role, status) => {\r\n    setItem('userName', userName);\r\n    setItem('email', email);\r\n    setItem('firstName', firstName);\r\n    setItem('lastName', lastName);\r\n    setItem('role', role);\r\n    setItem('status', status);\r\n}\r\n\r\nconst getUserInfo = () => {\r\n    return {\r\n        'userName': getItem('userName'),\r\n        'email': getItem('email'),\r\n        'firstName': getItem('firstName'),\r\n        'lastName': getItem('lastName'),\r\n        'role': getItem('role'),\r\n        'status': getItem('status')\r\n    };\r\n}\r\n\r\n// export\r\nconst storage = { isRememberMe, setRememberMe, setToken, getToken, setUserInfo, getUserInfo }\r\nexport default storage;"]},"metadata":{},"sourceType":"module"}