{"ast":null,"code":"import Api from './Api';\nvar url = \"/groups\";\nvar getAll = function getAll() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var sortField = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';\n  var sortType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'desc';\n  var search = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var minTotalMember = arguments.length > 5 ? arguments[5] : undefined;\n  var maxTotalMember = arguments.length > 6 ? arguments[6] : undefined;\n  var parameters = {\n    page: page,\n    size: size,\n    sort: \"\".concat(sortField, \",\").concat(sortType)\n  };\n\n  // search\n  if (search) {\n    parameters.search = search;\n  }\n\n  // filter\n  if (minTotalMember !== null && minTotalMember !== undefined) {\n    parameters.minTotalMember = minTotalMember;\n  }\n  if (maxTotalMember !== null && maxTotalMember !== undefined) {\n    parameters.maxTotalMember = maxTotalMember;\n  }\n  return Api.get(\"\".concat(url), {\n    params: parameters\n  });\n};\nvar existsByName = function existsByName(name) {\n  return Api.get(\"\".concat(url, \"/name/\").concat(name));\n};\nvar create = function create(name) {\n  var body = {\n    name: name\n  };\n  return Api.post(url, body);\n};\nvar getById = function getById(id) {\n  return Api.get(\"\".concat(url, \"/\").concat(id));\n};\nvar update = function update(id, name, totalMember) {\n  var body = {\n    name: name,\n    totalMember: totalMember\n  };\n  return Api.put(\"\".concat(url, \"/\").concat(id), body);\n};\nvar deleteByIds = function deleteByIds(ids) {\n  return Api.delete(\"\".concat(url, \"/\").concat(ids.toString()));\n};\n\n// export\nvar api = {\n  getAll: getAll,\n  existsByName: existsByName,\n  create: create,\n  getById: getById,\n  update: update,\n  deleteByIds: deleteByIds\n};\nexport default api;","map":{"version":3,"names":["Api","url","getAll","page","arguments","length","undefined","size","sortField","sortType","search","minTotalMember","maxTotalMember","parameters","sort","concat","get","params","existsByName","name","create","body","post","getById","id","update","totalMember","put","deleteByIds","ids","delete","toString","api"],"sources":["D:/New folder/VTI_Academy/ReactJS/Final_Demo/Frontend/Group_Management/src/api/GroupApi.js"],"sourcesContent":["import Api from './Api';\r\n\r\nconst url = \"/groups\";\r\n\r\nconst getAll = (page = 1, size = 10, sortField = 'id', sortType = 'desc', search = '', minTotalMember, maxTotalMember) => {\r\n\r\n    const parameters = {\r\n        page,\r\n        size,\r\n        sort: `${sortField},${sortType}`\r\n    }\r\n\r\n    // search\r\n    if (search) {\r\n        parameters.search = search;\r\n    }\r\n\r\n    // filter\r\n    if (minTotalMember !== null && minTotalMember !== undefined) {\r\n        parameters.minTotalMember = minTotalMember;\r\n    }\r\n\r\n    if (maxTotalMember !== null && maxTotalMember !== undefined) {\r\n        parameters.maxTotalMember = maxTotalMember;\r\n    }\r\n\r\n    return Api.get(`${url}`, { params: parameters });\r\n};\r\n\r\nconst existsByName = (name) => {\r\n    return Api.get(`${url}/name/${name}`);\r\n};\r\n\r\nconst create = (name) => {\r\n\r\n    const body = {\r\n        name\r\n    }\r\n\r\n    return Api.post(url, body);\r\n};\r\n\r\nconst getById = (id) => {\r\n    return Api.get(`${url}/${id}`);\r\n};\r\n\r\nconst update = (id, name, totalMember) => {\r\n\r\n    const body = {\r\n        name,\r\n        totalMember\r\n    }\r\n\r\n    return Api.put(`${url}/${id}`, body);\r\n};\r\n\r\nconst deleteByIds = (ids) => {\r\n    return Api.delete(`${url}/${ids.toString()}`);\r\n};\r\n\r\n// export\r\nconst api = { getAll, existsByName, create, getById, update, deleteByIds }\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}