{"ast":null,"code":"import _slicedToArray from \"D:\\\\New folder\\\\VTI_Academy\\\\ReactJS\\\\Final_Demo\\\\Frontend\\\\Group_Management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport has from 'lodash/has'; // @ts-expect-error\n\nimport toposort from 'toposort';\nimport { split } from 'property-expr';\nimport Ref from '../Reference';\nimport isSchema from './isSchema';\nexport default function sortFields(fields) {\n  var excludedEdges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var edges = [];\n  var nodes = new Set();\n  var excludes = new Set(excludedEdges.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      a = _ref2[0],\n      b = _ref2[1];\n    return \"\".concat(a, \"-\").concat(b);\n  }));\n  function addNode(depPath, key) {\n    var node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(\"\".concat(key, \"-\").concat(node))) edges.push([key, node]);\n  }\n  var _loop = function _loop(key) {\n    if (has(fields, key)) {\n      var value = fields[key];\n      nodes.add(key);\n      if (Ref.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(function (path) {\n        return addNode(path, key);\n      });\n    }\n  };\n  for (var key in fields) {\n    _loop(key);\n  }\n  return toposort.array(Array.from(nodes), edges).reverse();\n}","map":{"version":3,"names":["has","toposort","split","Ref","isSchema","sortFields","fields","excludedEdges","arguments","length","undefined","edges","nodes","Set","excludes","map","_ref","_ref2","_slicedToArray","a","b","concat","addNode","depPath","key","node","add","push","_loop","value","isRef","isSibling","path","deps","forEach","array","Array","from","reverse"],"sources":["D:/New folder/VTI_Academy/ReactJS/Final_Demo/Frontend/Group_Management/node_modules/yup/es/util/sortFields.js"],"sourcesContent":["import has from 'lodash/has'; // @ts-expect-error\n\nimport toposort from 'toposort';\nimport { split } from 'property-expr';\nimport Ref from '../Reference';\nimport isSchema from './isSchema';\nexport default function sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n\n  function addNode(depPath, key) {\n    let node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n\n  for (const key in fields) if (has(fields, key)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Ref.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n\n  return toposort.array(Array.from(nodes), edges).reverse();\n}"],"mappings":";AAAA,OAAOA,GAAG,MAAM,YAAY,CAAC,CAAC;;AAE9B,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,GAAG,MAAM,cAAc;AAC9B,OAAOC,QAAQ,MAAM,YAAY;AACjC,eAAe,SAASC,UAAUA,CAACC,MAAM,EAAsB;EAAA,IAApBC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC3D,IAAIG,KAAK,GAAG,EAAE;EACd,IAAIC,KAAK,GAAG,IAAIC,GAAG,EAAE;EACrB,IAAIC,QAAQ,GAAG,IAAID,GAAG,CAACN,aAAa,CAACQ,GAAG,CAAC,UAAAC,IAAA;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAEG,CAAC,GAAAF,KAAA;MAAEG,CAAC,GAAAH,KAAA;IAAA,UAAAI,MAAA,CAASF,CAAC,OAAAE,MAAA,CAAID,CAAC;EAAA,CAAE,CAAC,CAAC;EAElE,SAASE,OAAOA,CAACC,OAAO,EAAEC,GAAG,EAAE;IAC7B,IAAIC,IAAI,GAAGvB,KAAK,CAACqB,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5BX,KAAK,CAACc,GAAG,CAACD,IAAI,CAAC;IACf,IAAI,CAACX,QAAQ,CAACd,GAAG,IAAAqB,MAAA,CAAIG,GAAG,OAAAH,MAAA,CAAII,IAAI,EAAG,EAAEd,KAAK,CAACgB,IAAI,CAAC,CAACH,GAAG,EAAEC,IAAI,CAAC,CAAC;EAC9D;EAAC,IAAAG,KAAA,YAAAA,MAAAJ,GAAA;IAEyB,IAAIxB,GAAG,CAACM,MAAM,EAAEkB,GAAG,CAAC,EAAE;MAC9C,IAAIK,KAAK,GAAGvB,MAAM,CAACkB,GAAG,CAAC;MACvBZ,KAAK,CAACc,GAAG,CAACF,GAAG,CAAC;MACd,IAAIrB,GAAG,CAAC2B,KAAK,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,SAAS,EAAET,OAAO,CAACO,KAAK,CAACG,IAAI,EAAER,GAAG,CAAC,CAAC,KAAK,IAAIpB,QAAQ,CAACyB,KAAK,CAAC,IAAI,MAAM,IAAIA,KAAK,EAAEA,KAAK,CAACI,IAAI,CAACC,OAAO,CAAC,UAAAF,IAAI;QAAA,OAAIV,OAAO,CAACU,IAAI,EAAER,GAAG,CAAC;MAAA,EAAC;IAC/J;EAAC;EAJD,KAAK,IAAMA,GAAG,IAAIlB,MAAM;IAAAsB,KAAA,CAAAJ,GAAA;EAAA;EAMxB,OAAOvB,QAAQ,CAACkC,KAAK,CAACC,KAAK,CAACC,IAAI,CAACzB,KAAK,CAAC,EAAED,KAAK,CAAC,CAAC2B,OAAO,EAAE;AAC3D"},"metadata":{},"sourceType":"module"}