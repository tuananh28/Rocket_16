package com.vti.backend;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import com.vti.entity.Department;

import ultis.jdbcUltis;

public class DepartmentDAO {
	private jdbcUltis jdbc;

	public DepartmentDAO() throws SQLException, FileNotFoundException, IOException {
		jdbc = new jdbcUltis();
	}

	public List<Department> getDepartments()
			throws FileNotFoundException, ClassNotFoundException, SQLException, IOException {
		// Tạo method để lấy ra danh sách tất cả các Department
		List<Department> list = new ArrayList<>();
		Connection connection = jdbc.getConnection();
		Statement statement = connection.createStatement();
		String sql = "SELECT * FROM Department";
		ResultSet resultSet = jdbc.executeQuery(sql);
		while (resultSet.next()) {
			Department department = new Department();
			department.setId(resultSet.getInt("DepartmentId"));
			department.setName(resultSet.getString("DepartmentName"));
			list.add(department);
		}

		// disconnect
		jdbc.disConnection();

		return list;
	}

	public Department getDepByID(int id) throws Exception, ClassNotFoundException {
		// Tạo method để lấy ra Department có id = 5
		String sql = "SELECT * FROM Department WHERE DepartmentID = ?";
		PreparedStatement pStatement = jdbc.createPrepareStatement(sql);
		pStatement.setInt(1, id);
		ResultSet resultSet = pStatement.executeQuery();
		if (resultSet.next()) {
			Department department = new Department();
			resultSet.getInt("DepartmentID");
			resultSet.getNString("DepartmentName");
			return department;
		} else {
			System.out.println("Không tìm thấy id " + id);
			jdbc.disConnection();
			return null;
		}
	}

	public Boolean isDepNameExsist(String name) throws SQLException, ClassNotFoundException {
		// Tạo method để check department name có tồn tại hay không?
		String sql = "SELECT * FROM Department WHERE DepartmentName = ?";
		PreparedStatement pStatement = jdbc.createPrepareStatement(sql);
		pStatement.setNString(1, name);
		ResultSet result = pStatement.executeQuery();
		if (result.next()) {
			jdbc.disConnection();
			return true;
		} else {
			jdbc.disConnection();
			return false;
		}
	}

	public boolean CreateDep(String name) throws SQLException, ClassNotFoundException {
		// Tạo method để người dùng có thể tạo được department
		String sql = "INSERT INTO `Department` (DeparmentName) VALUES ?";
		PreparedStatement preparedStatement = jdbc.createPrepareStatement(sql);
		preparedStatement.setNString(1, name);
		int result = preparedStatement.executeUpdate();
		if (result == 1) {
			System.out.println("Tạo phòng thành công");
			jdbc.disConnection();
			return true;
		} else {
			System.out.println("Xảy ra lỗi !!");
			jdbc.disConnection();
			return false;
		}
	}

	public boolean updateDep(int id, String newName) throws Exception {
		// Tạo method để người dùng có thể update được department name
		Department department = getDepByID(id);
		if (department == null) {
			return false;
		} else {

			String sql = "UPDATE `Department` SET DepartmentName = ? WHERE id = ? ";
			PreparedStatement preparedStatement = jdbc.createPrepareStatement(sql);
			preparedStatement.setInt(1, id);
			preparedStatement.setNString(2, newName);
			int result = preparedStatement.executeUpdate();
			if (result == 1) {
				System.out.println("Update thành công");
				jdbc.disConnection();
				return true;
			} else {
				System.out.println("không thể Update");
				jdbc.disConnection();
				return false;
			}
		}
	}
}
